{"version":3,"sources":["Droppable.js","Draggable.js","App.js","index.js"],"names":["Droppable","props","_useDroppable","useDroppable","id","isOver","setNodeRef","style","color","undefined","_jsx","ref","children","Draggable","_useDraggable","useDraggable","attributes","listeners","transform","CSS","Translate","toString","_objectSpread","className","App","_useState","useState","_useState2","_slicedToArray","parent","setParent","draggableMarkup","data","hello","_jsxs","DndContext","onDragEnd","event","over","console","log","display","map","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"iLAGe,SAASA,EAAUC,GAChC,IAAAC,EAA+BC,YAAa,CAC1CC,GAAIH,EAAMG,KADJC,EAAMH,EAANG,OAAQC,EAAUJ,EAAVI,WAGVC,EAAQ,CACZC,MAAOH,EAAS,aAAUI,GAG5B,OACEC,cAAA,OAAKC,IAAKL,EAAYC,MAAOA,EAAMK,SAChCX,EAAMW,UAGb,C,kBCZe,SAASC,EAAUZ,GAChC,IAAAa,EAAyDC,YAAa,CACpEX,GAAIH,EAAMG,KADJY,EAAUF,EAAVE,WAAYC,EAASH,EAATG,UAAWX,EAAUQ,EAAVR,WAAYY,EAASJ,EAATI,UAGrCX,EAAQW,EACV,CACEA,UAAWC,IAAIC,UAAUC,SAASH,SAEpCT,EAEJ,OACEC,cAAA,SAAAY,oCAAA,CACEX,IAAKL,EACLiB,UAAU,iBACVhB,MAAOA,GACHU,GACAD,GAAU,IAAAJ,SAEbX,EAAMW,WAGb,CCnBe,SAASY,IACtB,IACAC,EAA4BC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAAnCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAClBI,EACJrB,cAACG,EAAS,CAACT,GAAG,YAAY4B,KAAM,CAAEC,MAAO,GAAIrB,SAAC,YAKhD,OACEsB,eAACC,IAAU,CAACC,UAed,SAAuBC,GACrB,IAAQC,EAASD,EAATC,KACRC,QAAQC,IAAI,CAAEH,UAIdP,EAAUQ,EAAOA,EAAKlC,GAAK,KAC7B,EAtBuCQ,SAAA,CACvB,OAAXiB,EAAkBE,EAAkB,KAErCrB,cAAA,OAAKH,MAAO,CAAEkC,QAAS,QAAS7B,SAZjB,CAAC,IAAK,IAAK,KAaZ8B,KAAI,SAACtC,GAAE,OAGjBM,aAFA,CAECV,EAAS,CAAUI,GAAIA,EAAGQ,SACxBiB,IAAWzB,EAAK2B,EAAkB,aADrB3B,EAEJ,QActB,CClCA,IAAMuC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACPrC,cAACsC,aAAU,CAAApC,SACTF,cAACc,EAAG,MAENmB,E","file":"static/js/main.f35430cf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useDroppable } from \"@dnd-kit/core\";\r\n\r\nexport default function Droppable(props) {\r\n  const { isOver, setNodeRef } = useDroppable({\r\n    id: props.id\r\n  });\r\n  const style = {\r\n    color: isOver ? \"green\" : undefined\r\n  };\r\n\r\n  return (\r\n    <div ref={setNodeRef} style={style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useDraggable } from \"@dnd-kit/core\";\r\nimport { CSS } from \"@dnd-kit/utilities\";\r\n\r\nexport default function Draggable(props) {\r\n  const { attributes, listeners, setNodeRef, transform } = useDraggable({\r\n    id: props.id\r\n  });\r\n  const style = transform\r\n    ? {\r\n        transform: CSS.Translate.toString(transform)\r\n      }\r\n    : undefined;\r\n\r\n  return (\r\n    <button\r\n      ref={setNodeRef}\r\n      className=\"draggable-item\"\r\n      style={style}\r\n      {...listeners}\r\n      {...attributes}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport { DndContext } from \"@dnd-kit/core\";\n\nimport Droppable from \"./Droppable\";\nimport Draggable from \"./Draggable\";\n\nexport default function App() {\n  const containers = [\"A\", \"B\", \"C\"];\n  const [parent, setParent] = useState(null);\n  const draggableMarkup = (\n    <Draggable id=\"draggable\" data={{ hello: 1 }}>\n      Drag me\n    </Draggable>\n  );\n\n  return (\n    <DndContext onDragEnd={handleDragEnd}>\n      {parent === null ? draggableMarkup : null}\n\n      <div style={{ display: \"flex\" }}>\n        {containers.map((id) => (\n          // We updated the Droppable component so it would accept an `id`\n          // prop and pass it to `useDroppable`\n          <Droppable key={id} id={id}>\n            {parent === id ? draggableMarkup : \"Drop here\"}\n          </Droppable>\n        ))}\n      </div>\n    </DndContext>\n  );\n\n  function handleDragEnd(event) {\n    const { over } = event;\n    console.log({ event });\n\n    // If the item is dropped over a container, set it as the parent\n    // otherwise reset the parent to `null`\n    setParent(over ? over.id : null);\n  }\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}